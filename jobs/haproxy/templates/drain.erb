#!/bin/bash
# vim: set ft=sh

set -e

pidfile=/var/vcap/sys/run/bpm/haproxy/haproxy.pid
sockfile=/var/vcap/sys/run/haproxy/stats.sock
logfile=/var/vcap/sys/log/haproxy/drain.log
lockfile=/var/vcap/sys/run/haproxy/drain.lock

mkdir -p "$(dirname ${logfile})"

<% if not p("ha_proxy.drain_enable") -%>
echo "drain is disabled" >> ${logfile}
echo 0
exit 0
<% else -%>

if [[ -f ${lockfile} ]]; then
  echo "$(date): draining already in progress" >> ${logfile}
  echo 0
  exit 0
fi

if [[ ! -f ${pidfile} ]]; then
  echo "$(date): pidfile does not exist" >> ${logfile}
  echo 0
  exit 0
fi

pid="$(cat ${pidfile})"
if ! ps -p ${pid} >/dev/null; then
  # In case haproxy_wrapper process is stale, pid will be empty,
  # the drain job should not fail
  echo "$(date): There was no process for the recorded haproxy_wrapper PID (${pid})." >> ${logfile}
  echo 0
  exit 0
fi

haproxy_wrapper_pid=$(pgrep -P "$pid" haproxy_wrapper)
<%- if p("ha_proxy.syslog_server") == "stdout" || p("ha_proxy.syslog_server") == "stderr" -%>
haproxy_maste