#!/bin/bash
#
# ci/scripts/shipit
#
# Script for generating Github release / tag assets
# and managing release notes for a BOSH Release pipeline
#
# author:  James Hunt <james@niftylogic.com>
# created: 2016-03-30

set -eu

header() {
	echo
	echo "###############################################"
	echo
	echo "$*"
	echo
}

: "${REPO_ROOT:?required}" # Contains the Git repo
: "${RELEASE_ROOT:?required}" # Contains any information that is passed on to subsequent steps, e.g. GitHub publish
: "${REPO_OUT:?required}" # Resulting repo state for subsequent steps
: "${BRANCH:?required}" # The branch name, from which to build the release
: "${GITHUB_OWNER:?required}" # The github organization / owner of the repo
: "${VERSION_FROM:?required}" # The path to the Version file
: "${GCP_SERVICE_KEY:?required}" # The GCP service key for accessing the blobstore, written to a temporary private.yml.

if [[ ! -f "${VERSION_FROM}" ]]; then
  echo >&2 "Version file (${VERSION_FROM}) not found.  Did you misconfigure Concourse?"
  exit 2
fi
VERSION=$(cat "${VERSION_FROM}")
if [[ -z "${VERSION}" ]]; then
  echo >&2 "Version file (${VERSION_FROM}) was empty.  Did you misconfigure Concourse?"
  exit 2
fi

if [[ ! -f "${REPO_ROOT}/ci/release_notes.md" ]]; then
  echo >&2 "ci/release_notes.md not found.  Did you forget to write them?"
  exit 1
fi

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

###############################################################

cd "${REPO_ROOT}"
RELEASE_NAME=$(bosh int config/final.yml --path /name)

# YAML needs to be indented. The GCP service key is a multiline YAML and needs to be indented uniformly.
# Bash does not allow variables in a sequence literal. $PAD is a 6 spaces indent.
PAD=$(printf ' %.0s' {1..6})
PADDED_GCP_SERVICE_KEY=$(sed -E 's/^(.*)$/'"${PAD}"'\1/g' <<<"${GCP_SERVICE_KEY}")

cat > config/private.yml <<YAML
---
blobstore:
  options:
    credentials_source: static
    json_key: |
${PADDED_GCP_SERVICE_KEY}
YAML

header "Pulling in any git submodules..."
git submodule update --init --recursive --force

header "Create final release..."
bosh -n create-release --final --version "${VERSION}"
bosh -n create-release "releases/${RELEASE_NAME}/${RELEASE_NAME}-${VERSION}.yml" \
              --tarball "releases/${RELEASE_NAME}/${RELEASE_NAME}-${VERSION}.tgz"
cd -

# SC2155 discourages variable assignment and export in the same line.
RELEASE_TGZ=${REPO_ROOT}/releases/${RELEASE_NAME}/${RELEASE_NAME}-${VERSION}.tgz
# shellcheck disable=SC2155
export SHA1=$(sha1sum "${RELEASE_TGZ}" | head -n1 | awk '{print $1}')
echo "SHA1=${SHA1}"
# shellcheck disable=SC2155
export SHA256=$(sha256sum "${RELEASE_TGZ}" | head -n1 | awk '{print $1}')
echo "SHA256=${SHA256}"



mkdir -p "${RELEASE_ROOT}/artifacts"
echo "v${VERSION}"                            > "${RELEASE_ROOT}/tag"
echo "v${VERSION}"                            > "${RELEASE_ROOT}/name"
mv "${REPO_ROOT}"/releases/*/*-"${VERSION}".tgz "${RELEASE_ROOT}/artifacts"
mv "${REPO_ROOT}/ci/release_notes.md"           "${RELEASE_ROOT}/notes.md"

version() {
  # extract the version variable $1 from the packaging script $2 (default 'haproxy')
  pattern='s/VERSION=(.*)(\s?#.*)/\1/p'
  package=${2:-haproxy}
  # extract version and remove all spaces
  sed -n -E "${pattern//VERSION/${1:?}}" "${REPO_ROOT}/packages/${package}/packaging" | sed 's/ *//g'
}

HAPROXY_VERSION=$(version HAPROXY_VERSION)
LUA_VERSION=$(version LUA_VERSION)
SOCAT_VERSION=$(version SOCAT_VERSION)
PCRE_VERSION=$(version PCRE_VERSION)
KEEPALIVED_VERSION=$(version KEEPALIVED_VERSION keepalived)

cat >> "${RELEASE_ROOT}/notes.md" <<EOF
### Versions

The following versions of upstream components are included in this haproxy-boshrelease:

| Component   | Version |
| ----------- | ------- |
| HAProxy     | \`${HAPROXY_VERSION}\` |
| keepalived  | \`${KEEPALIVED_VERSION}\` |
| Lua         | \`${LUA_VERSION}\` |
| PCRE        | \`${PCRE_VERSION}\` |
| socat       | \`${SOCAT_VERSION}\` |

### Deployment
\`\`\`yaml
releases:
- name: "${RELEASE_NAME}"
  version: "${VERSION}"
  url: "https://github.com/${GITHUB_OWNER}/${RELEASE_NAME}-boshrelease/releases/download/v${V